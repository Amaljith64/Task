
services:
  postgres:
    image: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    depends_on:
      - backend


  backend:
    build:
      context: ./backend
    volumes:
      - ./backend:/backend
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    command: python manage.py runserver 0.0.0.0:8000
    environment:
    - DB_NAME=${DB_NAME}
    - DB_USER=${DB_USER}
    - DB_PASSWORD=${DB_PASSWORD}
    - DB_HOST=${DB_HOST}
    - DB_PORT=${DB_PORT}
    - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
    - DJANGO_DEBUG=${DJANGO_DEBUG}
    - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
    - ENVIRONMENT=${ENVIRONMENT}
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"





volumes:
  postgres_data:

